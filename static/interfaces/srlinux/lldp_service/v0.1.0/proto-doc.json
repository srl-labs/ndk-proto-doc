{
  "files": [
    {
      "name": "lldp_service.proto",
      "description": "",
      "package": "srlinux.sdk",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "PortSubType",
          "longName": "LldpNeighborDataPb.PortSubType",
          "fullName": "srlinux.sdk.LldpNeighborDataPb.PortSubType",
          "description": "Represents port subtype.",
          "values": [
            {
              "name": "RESERVED",
              "number": "0",
              "description": "Reserved for future use"
            },
            {
              "name": "INTERFACE_ALIAS",
              "number": "1",
              "description": "Alias of the interface"
            },
            {
              "name": "PORT_COMPONENT",
              "number": "2",
              "description": "Port identifier based on a locally defined port component"
            },
            {
              "name": "MAC_ADDRESS",
              "number": "3",
              "description": "MAC address"
            },
            {
              "name": "NETWORK_ADDRESS",
              "number": "4",
              "description": "Network address"
            },
            {
              "name": "INTERFACE_NAME",
              "number": "5",
              "description": "Name of the interface"
            },
            {
              "name": "AGENT_CIRCUIT_ID",
              "number": "6",
              "description": "Port identifier based on the circuit ID in the DHCP relay agent information option"
            },
            {
              "name": "LOCALLY_ASSIGNED",
              "number": "7",
              "description": "Port identifier based on a locally defined alphanumeric string"
            }
          ]
        },
        {
          "name": "ChassisIdType",
          "longName": "LldpNeighborKeyPb.ChassisIdType",
          "fullName": "srlinux.sdk.LldpNeighborKeyPb.ChassisIdType",
          "description": "Represents chassis type.",
          "values": [
            {
              "name": "RESERVED",
              "number": "0",
              "description": "Reserved for future use"
            },
            {
              "name": "CHASSIS_COMPONENT",
              "number": "1",
              "description": "Chassis identifier based on a locally defined chassis component"
            },
            {
              "name": "INTERFACE_ALIAS",
              "number": "2",
              "description": "Alias of the interface"
            },
            {
              "name": "PORT_COMPONENT",
              "number": "3",
              "description": "Chassis identifier based on a locally defined port component"
            },
            {
              "name": "MAC_ADDRESS",
              "number": "4",
              "description": "MAC address"
            },
            {
              "name": "NETWORK_ADDRESS",
              "number": "5",
              "description": "Network address"
            },
            {
              "name": "INTERFACE_NAME",
              "number": "6",
              "description": "Name of the interface"
            },
            {
              "name": "LOCALLY_ASSIGNED",
              "number": "7",
              "description": "Chassis identifier based on a locally defined value"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "LldpNeighborDataPb",
          "longName": "LldpNeighborDataPb",
          "fullName": "srlinux.sdk.LldpNeighborDataPb",
          "description": "Represents LLDP neighbor data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "port_id",
              "description": "Port identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "port_type",
              "description": "Port type",
              "label": "",
              "type": "PortSubType",
              "longType": "LldpNeighborDataPb.PortSubType",
              "fullType": "srlinux.sdk.LldpNeighborDataPb.PortSubType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_mac",
              "description": "Port MAC address",
              "label": "",
              "type": "MacAddressPb",
              "longType": "MacAddressPb",
              "fullType": "srlinux.sdk.MacAddressPb",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bgp_peer_address",
              "description": "LLDP BGP autodiscovered addresses",
              "label": "repeated",
              "type": "IpAddressPb",
              "longType": "IpAddressPb",
              "fullType": "srlinux.sdk.IpAddressPb",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bgp_group_id",
              "description": "BGP group identifier",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "system_name",
              "description": "System name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "system_description",
              "description": "System description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LldpNeighborKeyPb",
          "longName": "LldpNeighborKeyPb",
          "fullName": "srlinux.sdk.LldpNeighborKeyPb",
          "description": "Represents LLDP neighbor key.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface_name",
              "description": "Local interface name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chassis_id",
              "description": "Chassis identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chassis_type",
              "description": "Chassis type",
              "label": "",
              "type": "ChassisIdType",
              "longType": "LldpNeighborKeyPb.ChassisIdType",
              "fullType": "srlinux.sdk.LldpNeighborKeyPb.ChassisIdType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LldpNeighborNotification",
          "longName": "LldpNeighborNotification",
          "fullName": "srlinux.sdk.LldpNeighborNotification",
          "description": "Represents LLDP neighbor notification.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "op",
              "description": "Operation such as create, delete, or update",
              "label": "",
              "type": "SdkMgrOperation",
              "longType": "SdkMgrOperation",
              "fullType": "srlinux.sdk.SdkMgrOperation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key",
              "description": "LLDP neighbor key",
              "label": "",
              "type": "LldpNeighborKeyPb",
              "longType": "LldpNeighborKeyPb",
              "fullType": "srlinux.sdk.LldpNeighborKeyPb",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "LLDP neighbor data",
              "label": "",
              "type": "LldpNeighborDataPb",
              "longType": "LldpNeighborDataPb",
              "fullType": "srlinux.sdk.LldpNeighborDataPb",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LldpNeighborSubscriptionRequest",
          "longName": "LldpNeighborSubscriptionRequest",
          "fullName": "srlinux.sdk.LldpNeighborSubscriptionRequest",
          "description": "Represents LLDP neighbor subscription request.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "Optional, to filter on name",
              "label": "",
              "type": "LldpNeighborKeyPb",
              "longType": "LldpNeighborKeyPb",
              "fullType": "srlinux.sdk.LldpNeighborKeyPb",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}